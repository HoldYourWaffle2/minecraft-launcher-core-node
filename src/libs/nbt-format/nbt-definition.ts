import { NBT } from "../nbt";

const D = NBT.TagType.Double, I = NBT.TagType.Int, S = NBT.TagType.String, L = NBT.TagType.Long, B = NBT.TagType.Byte, F = NBT.TagType.Float, ST = NBT.TagType.Short;

const ITEM = {
    Slot: 1,
    id: 8,
    Count: 1,
    Damage: 2,
    tag: {
        // general tags
        Unbreakable: B,
        CanDestroy: [S],

        // block tags
        CanPlaceOn: [S],
        BlockEntityTag: {
            // entity format
        },

        // enchantments
        ench: [{ id: ST, lvl: ST }],
        StoredEnchantments: [{ id: ST, lvl: ST }],
        RepairCost: I,

        // attribute modifiers
        AttributeModifiers: [
            { AttributeName: S, Name: S, Slot: S, Operation: I, Amount: D, UUIDMost: L, UUIDLeast: L },
        ],

        // potion effects
        CustomPotionEffects: [
            { Id: B, Amplifier: B, Duration: I, Ambient: B, ShowParticles: B },
        ],
        Potion: S,
        CustomPotionColor: I,

        // display properties
        display: [{ color: I, Name: S, LocName: S, Lore: [S] }],
        HideFlags: I,

        // written books
        resolved: B,
        /**
         * The copy tier of the book. 0 = original, 1 = copy of original, 2 = copy of copy, 3 = tattered.
         * If the value is greater than 1, the book cannot be copied. Does not exist for original books.
         * If this tag is missing, it is assumed the book is an original. 'Tattered' is unused in normal gameplay, and functions identically to the 'copy of copy' tier.
         */
        generation: I,
        author: S,
        title: S,
        /**
         * A single page in the book.
         * If generated by writing in a book and quill in-game, each page is a string in double quotes and uses the escape sequences \" for a double quote,
         * for a line break and \\ for a backslash. If created by commands or external tools, a page can be a serialized JSON object or an array of strings and/or objects
         * (see Commands#Raw JSON text) or an unescaped string.
         */
        pages: [S],

        // player heads
    },
};

const PLAYER = {
    AbsorptionAmount: 5,
    Air: 2,
    Attributes: [
        {
            Base: 6,
            Name: 8,
        },
    ],
    DataVersion: 3,
    DeathTime: 2,
    Dimension: 3,
    EnderItems: ["Item"],
    FallDistance: 5,
    FallFlying: 1,
    Fire: 2,
    Health: 5,
    HurtByTimestamp: 3,
    HurtTime: 2,
    Inventory: ["Item"],
    Invulnerable: 1,
    Motion: [
        6,
    ],
    OnGround: 1,
    PortalCooldown: 3,
    Pos: [
        6,
    ],
    Rotation: [
        5,
    ],
    Score: 3,
    SelectedItemSlot: 3,
    SleepTimer: 2,
    Sleeping: 1,
    UUIDLeast: 4,
    UUIDMost: 4,
    XpLevel: 3,
    XpP: 5,
    XpSeed: 3,
    XpTotal: 3,
    abilities: {
        invulnerable: 1,
        mayfly: 1,
        instabuild: 1,
        walkSpeed: 5,
        mayBuild: 1,
        flying: 1,
        flySpeed: 5,
    },
    foodExhaustionLevel: 5,
    foodLevel: 3,
    foodSaturationLevel: 5,
    foodTickTimer: 3,
    playerGameType: 3,
};

const LEVEL = {
    Data: {
        BorderCenterX: 6,
        BorderCenterZ: 6,
        BorderDamagePerBlock: 6,
        BorderSafeZone: 6,
        BorderSize: 6,
        BorderSizeLerpTarget: 6,
        BorderSizeLerpTime: 4,
        BorderWarningBlocks: 6,
        BorderWarningTime: 6,
        CustomBossEvents: {
            __MAP__: {
                Players: [],
                Color: S,
                CreateWorldFog: B,
                DarkenScreen: B,
                Max: I,
                Value: I,
                Name: S,
                OverLay: S,
                PlayBossMusic: B,
                Visible: B,
            },
        },
        DataVersion: 3,
        DayTime: 4,
        DataPacks: {
            Disabled: [S],
            Enabled: [S],
        },
        Difficulty: 1,
        DifficultyLocked: 1,
        DimensionData: {
            1: {
                DragonFight: {
                    ExitPortalLocation: { X: B, Y: B, Z: B },
                    Gateways: [
                        3,
                    ],
                    DragonKilled: 1,
                    PreviouslyKilled: 1,
                },
            },
        },
        GameRules: {
            doTileDrops: 8,
            doFireTick: 8,
            reducedDebugInfo: 8,
            naturalRegeneration: 8,
            disableElytraMovementCheck: 8,
            doMobLoot: 8,
            keepInventory: 8,
            doEntityDrops: 8,
            mobGriefing: 8,
            randomTickSpeed: 8,
            commandBlockOutput: 8,
            spawnRadius: 8,
            doMobSpawning: 8,
            logAdminCommands: 8,
            spectatorsGenerateChunks: 8,
            sendCommandFeedback: 8,
            doDaylightCycle: 8,
            showDeathMessages: 8,
        },
        GameType: 3,
        LastPlayed: 4,
        LevelName: 8,
        MapFeatures: 1,
        Player: "Player",
        RandomSeed: 4,
        SizeOnDisk: 4,
        SpawnX: 3,
        SpawnY: 3,
        SpawnZ: 3,
        Time: 4,
        Version: {
            Snapshot: 1,
            Id: 3,
            Name: 8,
        },
        allowCommands: 1,
        clearWeatherTime: 3,
        generatorName: 8,
        generatorOptions: 8,
        generatorVersion: 3,
        hardcore: 1,
        initialized: 1,
        rainTime: 3,
        raining: 1,
        thunderTime: 3,
        thundering: 1,
        version: 3,
    },
};
